#!/usr/bin/env python3
#
#

# bootstrap

from jsonbot.utils.opts import makesxmppconfig
from jsonbot.lib.threads import start_new_thread
from jsonbot.utils.mainloop import mainloop
from jsonbot.utils.exception import handle_exception
from jsonbot.lib.exit import globalshutdown
from jsonbot.lib.fleet import getfleet
from jsonbot.lib.errors import NoOwnerSet
from jsonbot.lib.boot import boot
from jsonbot.utils.log import setloglevel
from jsonbot.utils.opts import makesxmppopts
from jsonbot.version import getversion
import sys
import os
import logging
import warnings

warnings.simplefilter("ignore")

# basic imports


# sys.path manipulation

sys.path.insert(0, os.getcwd())

# print version


print(getversion("SLEEK"))

# options parser


opts = makesxmppopts()


setloglevel(opts.loglevel or "warn", not opts.nocolors)

# set datadir early on

if opts.datadir:
    if not os.path.isdir(opts.datadir):
        os.mkdir(opts.datadir)
    from jsonbot.lib.datadir import setdatadir

    setdatadir(opts.datadir)

# remaining jsonbot imports


# boot the bot

boot(opts.datadir)

# create bots config


try:
    cfg = makesxmppconfig(opts, botname=opts.name or "default-sleek", type="sleek")
except Exception as ex:
    print(str(ex))
    os._exit(1)
cfg.type = "sleek"
if not cfg.user and not opts.user:
    logging.error("no user set .. use the -u option")
got = False
if opts.nick:
    cfg.nick = opts.nick
    got = True
if opts.port:
    cfg.port = opts.port
    got = True
if opts.user:
    cfg.user = opts.user
    got = True
if opts.password:
    cfg.password = opts.password
    got = True
if cfg.disabled:
    cfg.disabled = 0
    got = True
if got:
    cfg.save()

# start the bot

try:
    from jsonbot.drivers.sleek.bot import SleekBot

    bot = SleekBot(cfg, register=opts.doregister)
except NoOwnerSet as ex:
    print("owner is not set in %s - use the -o option" % str(ex))
    os._exit(1)

if opts.channel and not opts.channel in bot.state["joinedchannels"]:
    bot.state["joinedchannels"].append(opts.channel)
    bot.state.save()

try:
    logging.warn("starting sleekxmpp bot with user %s" % bot.cfg.user)
    start_new_thread(bot.boot, ())
except KeyboardInterrupt:
    globalshutdown()
except:
    handle_exception()
    globalshutdown()
mainloop()
