#!/usr/bin/env python3
#
#

# bootstrap

import sys
import os
import logging
import jsb
import jsb.lib.users as users
from jsb.lib.eventhandler import mainhandler
from jsb.lib.threads import start_new_thread
from jsb.utils.mainloop import mainloop
from jsb.lib.fleet import getfleet
from jsb.lib.errors import NoOwnerSet
from jsb.utils.log import setloglevel
from jsb.lib.boot import plugin_packages, boot
from jsb.drivers.irc.bot import IRCBot
from jsb.lib.partyline import partyline
from jsb.utils.exception import handle_exception
from jsb.version import getversion
from jsb.lib.datadir import setdatadir, getdatadir
from jsb.utils.opts import makeircconfig, makeircopts
import warnings

warnings.simplefilter("ignore")


sys.path.insert(0, os.getcwd())

# options parser


opts = makeircopts()
if opts.datadir:
    setdatadir(opts.datadir)

# print version


print(getversion("IRC"))


# jsb imports


# basic imports


# loglevel

setloglevel(opts.loglevel or "warning", not opts.nocolors, opts.datadir)

# boot

boot(opts.datadir)

# runtime

if opts.owner:
    u = users.users_boot()
    u.make_owner(opts.owner)

cfg = makeircconfig(opts)

if opts.name:
    cfg.name = opts.name
else:
    cfg.name = "default-irc"
cfg.save()

# resume or start the bot

if opts.doresume and os.path.isfile(opts.doresume):
    logging.warn("irc - resuming from %s" % opts.doresume)
    if True:
        fleet = getfleet()
        fleet.resume(opts.doresume)
        fleet.startok.wait()
    partyline.resume(opts.doresume)
    os.unlink(opts.doresume)
else:
    try:
        bot = IRCBot(cfg)
    except NoOwnerSet as ex:
        print("owner is not set in %s - use the -o option" % str(ex))
        os._exit(1)
    if opts.channel and not opts.channel in bot.state["joinedchannels"]:
        bot.state["joinedchannels"].append(opts.channel)
        bot.state.save()
    start_new_thread(bot.boot, ())


mainloop()
