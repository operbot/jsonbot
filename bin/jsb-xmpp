#!/usr/bin/env python3
#
#

# bootstrap

import sys
from jsonbot.version import getversion
import os
import jsonbot
import jsonbot.lib.users as users
from jsonbot.utils.exception import handle_exception
from jsonbot.lib.exit import globalshutdown
from jsonbot.lib.datadir import setdatadir, getdatadir
from jsonbot.utils.opts import makesxmppopts, makesxmppconfig
from jsonbot.utils.mainloop import mainloop
from jsonbot.lib.fleet import getfleet
from jsonbot.lib.errors import NoOwnerSet
from jsonbot.lib.config import Config, getmainconfig
from jsonbot.utils.log import setloglevel
from jsonbot.lib.boot import plugin_packages, boot
from jsonbot.drivers.xmpp.bot import SXMPPBot
from jsonbot.lib.threads import start_new_thread
import warnings

warnings.simplefilter("ignore")


sys.path.insert(0, os.getcwd())


# jsonbot impors


# basic imports


# options parser

opts = makesxmppopts()
if opts.datadir:
    setdatadir(opts.datadir)

print(getversion("SXMPP"))

# loglevel


setloglevel(opts.loglevel or "warn", not opts.nocolors)

try:
    cfg = makesxmppconfig(opts)
except Exception as ex:
    print(str(ex))
    os._exit(1)
got = False
if opts.nick:
    cfg.nick = opts.nick
    got = True
if opts.port:
    cfg.port = opts.port
    got = True
if opts.user:
    cfg.user = opts.user
    got = True
if opts.password:
    cfg.password = opts.password
    got = True
if cfg.disabled:
    cfg.disabled = 0
    got = True
if got:
    cfg.save()

# start bot

boot(opts.datadir)

try:
    bot = SXMPPBot(cfg, register=opts.doregister)
except NoOwnerSet as ex:
    print("owner is not set in %s - use the -o option" % str(ex))
    os._exit(1)

if opts.channel and not opts.channel in bot.state["joinedchannels"]:
    bot.state["joinedchannels"].append(opts.channel)
    bot.state.save()

start_new_thread(bot.boot, ())
mainloop()
